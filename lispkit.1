.\" groff -man -Tascii lispkit.1 | less
.TH lispkit 1 
.SH "NAME"
lispkit \- functional programming language interpreter
.br
lispkitc \- lispkit compiler script
.SH "SYNOPSIS"
.B lispkit 
.I program
[
.I argument
]
.br
.B lispkitc
.I infile
[
.I outfile
]
.SH "OPTIONS"
.IP program
A file containing lispkit machine code.
.IP argument
A file containing lispkit arguments. 
If absent will read arguments from stdin.
.IP infile
A lispkit source file.
.IP outfile
A compiled lispkit program.
If absent will write program to stdout.
.SH "DESCRIPTION"
Lispkit is a SECD based machine for interpreting 
programs made up of symbolic expressions
and simple functions such as cons, car, cdr, 
similar to Lisp.
.SH "FILES"
.IP lispkit-compiler.bin
Lispkit compiler in machine code form
.IP lispkit-compiler.lks
Lispkit compiler in source code form
.SH "ENVIRONMENT"
.B LISPKIT_MEMORY
Maximum number of object cells that Lispkit will allocate.
.SH "AUTHOR"
This program is based on the Lispkit described in
"Functional Programming Application and Implementation", 
by Peter Henderson (ISBN 0-13-331579-7).
This Lispkit and man page by 
A. Carl Douglas (carl.douglas@gmail.com).

